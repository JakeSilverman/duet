alias_addr_err: duet.exe -domain oct -hdfg @code/alias_addr_err.c
backward_must_alias: duet.exe -domain oct -hdfg @code/backward_must_alias.c
branch_err: duet.exe -domain oct -hdfg @code/branch_err.c
forward_must_alias: duet.exe -domain oct -hdfg @code/forward_must_alias.c
forward_must_alias_err: duet.exe -domain oct -hdfg @code/forward_must_alias_err.c
interproc_must_alias: duet.exe -domain oct -hdfg @code/interproc_must_alias.c
interproc_uninit: duet.exe -domain oct -hdfg @code/interproc_uninit.c
join: duet.exe -domain oct -hdfg @code/join.c
loop: duet.exe -hdfg @code/loop.c
must_alias: duet.exe -domain oct -hdfg @code/must_alias.c
must_alias_addr: duet.exe -domain oct -hdfg @code/must_alias_addr.c
must_alias_err: duet.exe -domain oct -hdfg @code/must_alias_err.c
param_return: duet.exe -domain oct -hdfg @code/param_return.c
path_sensitive_must_alias: duet.exe -domain oct -hdfg @code/path_sensitive_must_alias.c
point_to_self: duet.exe -hdfg @code/point_to_self.c
struct: duet.exe -hdfg @code/struct.c
undefined_func: duet.exe -hdfg @code/undefined_func.c
uninit: duet.exe -hdfg @code/uninit.c
var: duet.exe -hdfg @code/var.c
vardef_memuse: duet.exe -hdfg @code/vardef_memuse.c
struct_array: duet.exe -check-array-bounds -hdfg @code/struct_array.c
# fspa.c -fspa
# fspa_loop.c -fspa
 loop free
pointer_arith: duet.exe -cra-no-forward-inv -cra @code/pointer_arith.c
interproc: duet.exe -cra-no-forward-inv -cra @code/interproc.c
# linear
count_by_1: duet.exe -cra-no-forward-inv -cra @code/count_by_1.c
count_by_1_variant: duet.exe -cra-no-forward-inv -cra @code/count_by_1_variant.c
count_up_down_safe: duet.exe -cra-no-forward-inv -cra @code/count_up_down_safe.c
count_up_down_unsafe: duet.exe -cra-no-forward-inv -cra @code/count_up_down_unsafe.c
nested: duet.exe -cra-no-forward-inv -cra @code/nested.c
count_by_2: duet.exe -cra-no-forward-inv -cra @code/count_by_2.c
count_by_nondet: duet.exe -cra-no-forward-inv -cra @code/count_by_nondet.c
rec1: duet.exe -cra-no-forward-inv -cra @code/rec1.c
rec2: duet.exe -cra-no-forward-inv -cra @code/rec2.c
rec1-param: duet.exe -cra-no-forward-inv -cra @code/rec1-param.c
rec2-param: duet.exe -cra-no-forward-inv -cra @code/rec2-param.c
half: duet.exe -cra-split-loops -cra-no-forward-inv -cra @code/half.c
const_false: duet.exe -cra-split-loops -cra @code/const_false-unreach-call1.c
wolfe1992_fig5: duet.exe -cra-no-forward-inv -cra-prsd -cra @code/wolfe1992_fig5.c
divide4: duet.exe -cra-prsd -cra @code/divide4.c
mbr2016: duet.exe -cra-prsd -cra @code/mbr2016.c
# memory
mem: duet.exe -cra-no-forward-inv -check-array-bounds -cra @code/mem.c
mem2: duet.exe -cra-no-forward-inv -check-array-bounds -cra @code/mem2.c
# nonlinear
count_by_k: duet.exe -cra-no-forward-inv -cra @code/count_by_k.c
quotient: duet.exe -cra @code/quotient.c
quotient2: duet.exe -cra-no-forward-inv -cra-split-loops -cra @code/quotient.c
divide: duet.exe -cra-no-forward-inv -cra @code/divide.c
factor: duet.exe -cra-no-forward-inv -cra @code/factor.c
mult: duet.exe -cra-no-forward-inv -cra @code/mult.c
mult-rec: duet.exe -cra-no-forward-inv -cra @code/mult-rec.c
exponential: duet.exe -cra-no-forward-inv -cra @code/exponential.c
gauss_sum: duet.exe -cra-no-forward-inv -cra @code/gauss_sum.c
degree3_monomial: duet.exe -cra-split-loops -cra-no-forward-inv -cra @code/degree3_monomial.c
degree3_binomial: duet.exe -cra-split-loops -cra-no-forward-inv -cra @code/degree3_binomial.c
degree4_monomial: duet.exe -cra-split-loops -cra-no-forward-inv -cra @code/degree4_monomial.c
degree4_binomial: duet.exe -cra-split-loops -cra-no-forward-inv -cra @code/degree4_binomial.c
power_log: duet.exe -cra @code/power_log.c
log: duet.exe -cra-split-loops -rba @code/log.c
binary_search: duet.exe -rba @code/binary_search.c
fib_secure: duet.exe
