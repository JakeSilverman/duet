Building
--------------------------------------------------------------------------------
Dependencies:
  - OCaml
  - GMP, MPFR
  - APRON abstract domain library
  - Graphviz
  - Eye of Gnome

CIL and ocamlgraph are included in this distribution; 'make config' will attempt
to build them, but they may require additional configuration.  A jar file for (a
hacked version of) bddbddb is also included, but the source is not - contact
zkincaid@gmail.com for the source.

There is also an (optional) frontend for goto programs, the binary output
format of goto-cc.  This frontend requires CBMC 4.0 source, which can be
obtained via
    svn co http://www.cprover.org/svn/cbmc/releases/cbmc-4.0

Goto-cc is packaged with satabs, and can be obtained from the satabs website,
http://www.cprover.org/satabs/

Once the dependencies,
  1. ./configure
  2. make config
  3. make

We use darcs for version control and bugs-everywhere for issue tracking.

Build instructions:
  1. Run make config
  2. Run make

Documentation can be built with 'make doc'; the output will be in ./doc.  This
requires ocamldoc.  A dependency graph of the modules in the project can be
built with 'make dg'; the output will be in doc/dependencies.png

A TAGS file (for emacs/vim) can be built with 'make tags'.  This requires otags.

Running
--------------------------------------------------------------------------------
Currently, the main usage is the algorithm from "Iterative Coarsening of
Interference Abstractions for Parameterized Programs".  There are three versions
available, corresponding to interpretation over an interval, octagon, and
polyhedron abstract domain:

    interval analysis:
        runUI -coarsen <FILE>
    octagon analysis:
        runUI -coarsen-oct <FILE>
    polyhedron analysis:
        runUI -coarsen-poly <FILE>

These analyses require bddbdddb to run, which means that either bddbddb.jar must
be in the directory runUI is being run from, or its location must be specified
with "-loadpath <PATH_TO_BDDBDDB>".

Parameterization is turned off by default.  To turn it on, use "-parameterized"
to parameterize all threads, or "-parameterized-thread <THREAD_NAME>" to
parameterize a single thread.
