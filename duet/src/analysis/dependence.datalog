## domains
TVL 3
LOC 5
RS 5
AP 3

# relations
defines(s:LOC, ap:AP) inputtuples
uses(s:LOC, ap:AP) inputtuples
succ(p:LOC, s:LOC) inputtuples
definesFC(s:LOC, ap:AP) inputtuples
mayReach(def:LOC,ap:AP,use:LOC) outputtuples
mayReach_impl(def:LOC,da:LOC,ap:AP,ua:LOC,use:LOC) outputtuples
consistentLocMod(a:LOC, b:LOC)
consistentLoc(a:LOC, b:LOC)
step(pl:LOC,pr:LOC,sl:LOC,sr:LOC)

## rules

# Three valued logic consistency relation
# 0 -> Maybe
# 1 -> Yes
# 2 -> No
consistent(v1:TVL, v2:TVL)
consistent(1,1).
consistent(2,2).
consistent(0,0).
consistent(0,1).
consistent(0,2).
consistent(1,0).
consistent(2,0).

# Two locations are consistent iff the valuation of every predicate is
# for the two locations are consistent.


# Two locations are coreachable iff there an interleaving of CFG paths on which
# no intermediate state is inconsistent
coreachable(ls:LOC, rs:LOC) outputtuples
# initial states should always be consistent and coreachable!
coreachable(ls, rs) :- consistentLocMod(ls,rs),succ(prs, rs),coreachable(prs, ls).
coreachable(ls, rs) :- consistentLocMod(ls,rs),succ(prs, rs),coreachable(ls, prs).

mayReach(def,ap,use) :- defines(def,ap), uses(use,ap), succ(use,useA1), !defines(useA1,ap),mayReach_impl(def,defDescendent,ap,useAncestor,useA1).

mayReach(def,ap,use) :- defines(def,ap), uses(use,ap), succ(defPred,def), succ(usePred,use), coreachable(defPred,usePred), consistentLocMod(usePred,def).

mayReach(def,ap,use) :- defines(def,ap), uses(use,ap), succ(defPred,def), succ(usePred,use), coreachable(usePred,defPred), consistentLocMod(usePred,def).

# either left thread or right thread makes a step.
step(ls1,rs1,ls2,rs2) :- rs1=rs2, succ(ls1, ls2).
step(ls1,rs1,ls2,rs2) :- ls1=ls2, succ(rs1, rs2).


mayReach_impl(dBegin,dEnd,ap,uBegin,uEnd) :- dBegin=dEnd, uBegin=uEnd, coreachable(dBegin,uBegin).
mayReach_impl(dBegin,dEndSucc,ap,uBegin,uEnd) :- mayReach_impl(dBegin,dEnd,ap,uBegin,uEnd), succ(dEnd,dEndSucc), !defines(dEndSucc,ap),consistentLocMod(uEnd,dEndSucc).
mayReach_impl(dBegin,dEndSucc,ap,uBegin,uEnd) :- mayReach_impl(dBegin,dEnd,ap,uBegin,uEnd), succ(uEnd,uEndSucc), !defines(uEndSucc,ap),consistentLocMod(dEnd,uEndSucc).
